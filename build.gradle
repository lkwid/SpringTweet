buildscript {
	ext {
		springBootVersion = '1.5.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
	baseName = 'master-spring-mvc'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-social-twitter')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.session:spring-session:1.3.0.RELEASE')	
	compile('org.webjars:materializecss:0.97.7')	
	compile('org.webjars:jquery:3.1.1-1')		
	compile('org.webjars:material-design-icons:3.0.1')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
	compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml')
	compile('io.springfox:springfox-swagger2:2.6.1')
	compile('io.springfox:springfox-swagger-ui:2.6.1')
	compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.jayway.jsonpath:json-path')
	testCompile('org.assertj:assertj-core:3.6.2')	
	testCompile('org.springframework.security:spring-security-test:4.0.0.RELEASE')	
	testCompile('org.fluentlenium:fluentlenium-junit:3.2.0')
	testCompile('org.fluentlenium:fluentlenium-assertj:3.2.0')	
	testCompile('org.seleniumhq.selenium:selenium-java:3.4.0')	
	testCompile('org.codehaus.groovy:groovy-all:2.4.11')
	testCompile('org.spockframework:spock-spring')
}

configurations {
	testCompile {
		exclude module: 'selenium-safari-driver'		
	}	
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime
}

sourceSets {
	integrationTest {
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}

task integrationTest(type : Test) {
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
	reports.html.destination = file("${reporting.baseDir}/integrationTests")
}